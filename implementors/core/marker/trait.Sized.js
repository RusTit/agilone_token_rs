(function() {var implementors = {};
implementors["bytes"] = [{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> for <a class=\"struct\" href=\"bytes/buf/struct.UninitSlice.html\" title=\"struct bytes::buf::UninitSlice\">UninitSlice</a>","synthetic":true,"types":["bytes::buf::uninit_slice::UninitSlice"]}];
implementors["rocket"] = [{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> for <a class=\"struct\" href=\"rocket/form/name/struct.Name.html\" title=\"struct rocket::form::name::Name\">Name</a>","synthetic":true,"types":["rocket::form::name::name::Name"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> for <a class=\"struct\" href=\"rocket/form/name/struct.Key.html\" title=\"struct rocket::form::name::Key\">Key</a>","synthetic":true,"types":["rocket::form::name::key::Key"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> for <a class=\"struct\" href=\"rocket/fs/struct.FileName.html\" title=\"struct rocket::fs::FileName\">FileName</a>","synthetic":true,"types":["rocket::fs::file_name::FileName"]}];
implementors["rocket_http"] = [{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> for <a class=\"struct\" href=\"rocket_http/struct.RawStr.html\" title=\"struct rocket_http::RawStr\">RawStr</a>","synthetic":true,"types":["rocket_http::raw_str::RawStr"]}];
implementors["uncased"] = [{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> for <a class=\"struct\" href=\"uncased/struct.UncasedStr.html\" title=\"struct uncased::UncasedStr\">UncasedStr</a>","synthetic":true,"types":["uncased::borrowed::UncasedStr"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()